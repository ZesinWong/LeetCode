/**
 * @version 1.0
 * @date    2016年10月5日
 * @author  ZesinWong@gmail.com
 * 
 * Method:Fast-slow pointers
 * 
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */

public class Solution {
	public boolean hasCycle(ListNode head) {

		if (null == head || null == head.next)
			return false;
		ListNode slow = head;
		ListNode fast = head.next;
		while (slow != fast) {
			if (null == fast.next || null == fast.next.next)
				return false;
			slow = slow.next;
			fast = fast.next.next;
		}
		return true;
	}
}
